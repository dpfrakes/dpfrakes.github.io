<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>design on Dan Frakes</title>
    <link>https://dpfrakes.github.io/tags/design/</link>
    <description>Recent content in design on Dan Frakes</description>
    <image>
      <url>https://dpfrakes.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://dpfrakes.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://dpfrakes.github.io/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Annoying by Design</title>
      <link>https://dpfrakes.github.io/posts/annoying-by-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dpfrakes.github.io/posts/annoying-by-design/</guid>
      <description>It&amp;rsquo;s no secret that the most successful apps, games, and social media platforms dedicate considerable effort into making their product addictive. If they don&amp;rsquo;t, consumers would be less likely to use their product, making it less valuable to advertisers.
I&amp;rsquo;d considered making a social media aggregator application that removes addictive &amp;ldquo;features,&amp;rdquo; such as infinite scroll, targeted advertising, and notification badges, but I decided it would not be worth the time since I&amp;rsquo;m rarely on Facebook anyway.</description>
    </item>
    
    <item>
      <title>Bi-Directional Data Architecture</title>
      <link>https://dpfrakes.github.io/posts/bidirectional-data-architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dpfrakes.github.io/posts/bidirectional-data-architecture/</guid>
      <description>I constantly think of software, data, and other technical components of my job in terms of analogies. It&amp;rsquo;s a great teaching mechanism, particularly for visual learners such as myself.
Analogies have greatly impacted terminology in software for a long time. Data pipelines are so named as information &amp;ldquo;flows&amp;rdquo; from a source to a destination. Neural networks, and their building blocks called perceptrons, are named after neurological terminology since the design of these structures was inspired by the brain.</description>
    </item>
    
  </channel>
</rss>
